Type	Category	Concept	Grade	Time (mins)	Name	Source	Description
Lesson	Coding	Abstraction	4+	50+	Mad glibs	https://code.org/curriculum/course4/5/Teacher	Abstraction is one of the most important skills for a computer scientist to understand. It simplifies problems and prevents unnecessary repetition. A good coder uses abstraction just about every time she creates a program. This activity will have your students analyze stories for differences so that they can abstract them away.
Lesson	Coding	Algorithms	.K+	10-15+	Peanut butter and jelly robot	https://www.howtosmile.org/resource/smile-000-000-000-704	This is an activity about robotics programming. Learners will discover how precise programmers have to be as they instruct a friend to make a peanut butter and jelly sandwich. This is a great activity for both the "programmer" and the "robot" to use their creativity to its fullest.
Lesson	Coding	Algorithms	.K+	45-50+	fuzzFamily Frenzy (Advanced)	https://www.kodable.com/hour-of-code/lessons/lesson_advanced_kindergarten	An advanced unplugged lesson on using algorithms to move a "robot" (coder) around a path.
Lesson	Coding	Algorithms	.K+	45-50+	fuzzFamily Frenzy (Beginner)	https://www.kodable.com/hour-of-code/lessons/lesson_beginner_kindergarten	A beginner unplugged lesson on using algorithms to move a "robot" (coder) around a path.
Lesson	Coding	Algorithms	.K+	45+	Happy maps	https://code.org/curriculum/course1/1/Teacher	At the root of all computer science is something called an algorithm. The word “algorithm” may sound like something complicated, but really it’s just a list of instructions that someone can follow to achieve a result.
Lesson	Coding	Algorithms	.K+	50+	Move it, move it	https://code.org/curriculum/course1/2/Teacher	This lesson will help students realize that in order to give clear instructions, they need a common language. Students will practice controlling one another using a simple combination of hand gestures.
Lesson	Coding	Algorithms	.K+	50+	Real life algorithms: Plant a seed	https://code.org/curriculum/course1/6/Teacher	In this lesson, students will relate the concept of algorithms back to everyday real-life activities by planting an actual seed. The goal here is to start building the skills to translate real-world situations to online scenarios and vice versa.
Lesson	Coding	Algorithms	.K+	60+	My robotic friends	https://csedweek.org/unplugged/thinkersmith	Using a predefined “Robot Vocabulary” your students will figure out how to guide one another to accomplish specific tasks without discussing them first. This segment teaches students the connection between symbols and actions, as well as the valuable skill of debugging.
Lesson	Coding	Algorithms	.K+	60+	Sentence puzzles (ELA Integration)	https://www.kodable.com/hour-of-code/lessons/lesson_ela_kindergarten	An ELA centered lesson plan on using algorithmic sequences to write a sentence.
Lesson	Coding	Algorithms	.K+	NA	How to train your robot	https://drtechniko.com/2012/04/09/how-to-train-your-robot/	The game works as follows: every kid is turned into a “robot master” and their mom or dad becomes their “robot”. I give each kid a “Robot Language Dictionary” and explain to them that this is the language their robot understands. The dictionary has symbols for “move left leg forward”, “turn left”, “grab”, “drop” etc.
Lesson	Coding	Algorithms	.K+	NA	Human crane	http://code-it.co.uk/wp-content/uploads/2015/05/humancraneplan.pdf	A lesson where kids create and test crane algorithms that move blocks from one bowl to another.
Lesson	Coding	Algorithms	.K+	NA	The hokey pokey	http://www.nikkidrobertson.com/2014/12/unplugged-hour-of-code-with-hokey-pokey.html	Using code to program the hokey pokey.
Lesson	Coding	Algorithms	1+	45-50+	fuzzFamily Frenzy (Beginner)	https://www.kodable.com/hour-of-code/lessons/lesson_beginner_first	A beginner unplugged lesson on using algorithms to move a "robot" (coder) around a path.
Lesson	Coding	Algorithms	1+	60+	Letter to a friend (ELA Integration)	https://www.kodable.com/hour-of-code/lessons/lesson_ela_first	An ELA centered lesson plan on using algorithmic sequences to write a letter.
Lesson	Coding	Algorithms	2+	10-15+	Sentence checker algorithm	http://code-it.co.uk/grammaralgorithms	An activity to reinforce grammar rules using computing science concepts. This could be used as a homework activity or as an alternative strategy within a literacy lesson. Pupils convert sentence grammar rules into a flowchart algorithm they can use to check their sentences.
Lesson	Coding	Algorithms	2+	30+	The poor cartographer	http://csunplugged.org/graph-colouring/	Coloring a map (which is equivalent to a graph) sounds like a simple task, but in computer science this problem epitomizes a major area of research looking for solutions to problems that are easy to make up, but seem to require an intractable amount of time to solve. This activity introduces graph colouring, and leads on to many variations and extensions that reach the cutting edge of computer science.
Lesson	Coding	Algorithms	2+	45-50+	fuzzFamily Frenzy (Beginner)	https://www.kodable.com/hour-of-code/lessons/lesson_beginner_second	A beginner unplugged lesson on using algorithms to move a "robot" (coder) around a path
Lesson	Coding	Algorithms	2+	60+	Letter to a friend (ELA Integration)	https://www.kodable.com/hour-of-code/lessons/lesson_ela_second	An ELA centered lesson plan on using algorithmic sequences to write a letter.
Lesson	Coding	Algorithms	2+	NA	Beat the clock	http://csunplugged.org/sorting-networks/	To make computers go faster, it can be a lot more effective to have several slower computers working on a problem than a single fast one. This raises questions about how much of the computation can be done at the same time. Here we use a fun team activity to demonstrate an approach to parallel sorting. It can be done on paper, but we like to get students to do it on a large scale, running from node to node in the network.
Lesson	Coding	Algorithms	2+	NA	Getting up	http://code-it.co.uk/unplugged/gettingup	Writing an algorithm (accurate sequence of instructions to achieve a goal) focussed around getting up and getting to school, using Microsoft Publisher as the recording medium. Although this can be done on paper, pupils make so many mistakes that easy editing and rearranging is of real value.
Lesson	Coding	Algorithms	2+	NA	Marching orders	http://csunplugged.org/programming-languages/	Computer programs are sequences of instructions that the computer must follow. There are hundreds of computer languages, but all involve giving clear and unambiguous instructions to a devices that doesn’t understand meanings. This activity demonstrates some of the issues that arise when we try to give precise instructions to achieve a desired outcome.
Lesson	Coding	Algorithms	3+	10+	Emotional robot video	https://teachinglondoncomputing.org/free-workshops/programming-unplugged-programming-without-computers/	This activity aims to show that the future of human-computer interaction is not about keyboards and mice. In the future computers will be able to understand the subtleties of human-human interaction. We focus here on the way we react to facial expressions and tone of voice. it also demonstrates that a robot "brain" based on a neural network can learn human-like behaviour in the form of emotions.
Lesson	Coding	Algorithms	3+	45-50+	fuzzFamily Frenzy (Beginner)	https://www.kodable.com/hour-of-code/lessons/lesson_beginner_third	A beginner unplugged lesson on using algorithms to move a "robot" (coder) around a path.
Lesson	Coding	Algorithms	3+	50+	Graph paper programming	https://code.org/curriculum/course2/1/Teacher	By "programming" one another to draw pictures, students will begin to understand what programming is really about. The class will begin by having students instruct each other to color squares in on graph paper in an effort to reproduce an existing picture.
Lesson	Coding	Algorithms	3+	50+	Real life algorithms: Paper planes	https://code.org/curriculum/course2/2/Teacher	In this lesson, students will relate the concept of algorithms back to everyday real-life activities by making paper airplanes. The goal here is to start building the skills to translate real-world situations to online scenarios and vice versa.
Lesson	Coding	Algorithms	3+	60+	Write a short story (ELA Integration)	https://www.kodable.com/hour-of-code/lessons/lesson_ela_third	An ELA centered lesson plan on using algorithmic sequences to create a story.
Lesson	Coding	Algorithms	3+	NA	Lightest and heaviest	http://csunplugged.org/sorting-algorithms/	Almost any list that comes out of a computer is sorted into some sort of order, and there are many more sorted lists inside computers that the user doesn’t see. Many clever algorithms have been devised for putting values into order efficiently. In this activity students compare different algorithms to sort weights in order.
Lesson	Coding	Algorithms	4+	45-50+	fuzzFamily Frenzy (Beginner)	https://www.kodable.com/hour-of-code/lessons/lesson_beginner_fourth	A beginner unplugged lesson on using algorithms to move a "robot" (coder) around a path.
Lesson	Coding	Algorithms	4+	50+	Create-a-face: Programming an emotional robot	https://teachinglondoncomputing.org/free-workshops/programming-unplugged-programming-without-computers/	This is an exploration of affective computing, which relates to moods and emotions. The class make an affective (relating to moods and emotions) robot face out of card, tubes and themselves. It is programmed to react to different kinds of sounds (nasty, nice or sudden) and show different emotions (sad, happy, surprised). The class then think up some other facial expressions and program sets of rules to make the face respond to sounds with new expressions.
Lesson	Coding	Algorithms	4+	50+	Dice race	https://code.org/curriculum/course3/10/Teacher	In this lesson, students will relate the concept of algorithms back to everyday real-life activities by playing the Dice Race game. The goal here is to start building the skills to translate real-world situations to online scenarios and vice versa.
Lesson	Coding	Algorithms	4+	60+	Write a short story (ELA Integration)	https://www.kodable.com/hour-of-code/lessons/lesson_ela_fourth	An ELA centered lesson plan on using algorithmic sequences to create a story.
Lesson	Coding	Algorithms	4+	NA	Battleships	http://csunplugged.org/searching-algorithms/	Searching for a keyword or value is the basis of many computing applications, whether on an internet search engine or looking up a bank account balance. This activity explores the main algorithms that are used as the basis for searching on computers, using different variations on the game of battleships.
Lesson	Coding	Algorithms	5+	20+	Conversations with computers	http://csunplugged.org/the-turing-test/	Artificial intelligence has been researched for decades, and has resulted in many useful products, but still no system that is as intelligent as a human. This activity explores just how we might recognise whether a system is truly “intelligent”. It involves reasoning about what it means to be intelligent, and even what makes us human.
Lesson	Coding	Algorithms	5+	45-50+	fuzzFamily Frenzy (Beginner)	https://www.kodable.com/hour-of-code/lessons/lesson_beginner_fifth	A beginner unplugged lesson on using algorithms to move a "robot" (coder) around a path.
Lesson	Coding	Algorithms	5+	50+	Tangrams	https://code.org/curriculum/course4/1/Teacher	This lesson shows us something important about algorithms. If you keep an algorithm simple there are lots of ways to use it. If you want to make sure everyone ends up with the same thing, then your algorithm needs more detail.
Lesson	Coding	Algorithms	5+	60+	Writing & coding (ELA Integration)	https://www.kodable.com/hour-of-code/lessons/lesson_ela_fifth	An ELA centered lesson plan on using coding vocabulary within a graphic organizer to understanding algorithmic sequences.
Lesson	Coding	Algorithms	NA	15+	The robots game	http://onfoodandcoding.blogspot.com/2013/06/the-robots-game.html	This is a race game played by two teams. The winning team is the first to get all their "robots" from the start to the finish and off the board. (Note: the winner is the first team to get all their robots off the board, not just the first one.)
Lesson	Coding	Algorithms	NA	NA	Algorithms	https://playgroundcomputing.files.wordpress.com/2014/05/algorithms1.pdf	Some activitis for introducing algorithms.
Lesson	Coding	Algorithms	NA	NA	Exchange sort investigation	http://code-it.co.uk/unplugged/sort/sortoverview	In this module pupils investigate all the possible ways of comparing two cards in a list such as starting with the end cards and working into the centre or comparing pairs next to each other starting on the right of the list. They then move on to test which patterns can be turned into Exchange sorts.
Lesson	Coding	Algorithms	NA	NA	Harold the robot	http://csunplugged.org/harold-the-robot-2/	In this activity children simply give directions to a “robot” (either an adult or another child) and find out which instructions the robot is able to follow, and how their instructions are taken literally.
Lesson	Coding	Algorithms	NA	NA	Jam sandwich algorithm	http://code-it.co.uk/unplugged/jamsandwich	Create an algorithm (a precise set of instructions or rules to achieve an outcome or solve a problem) to instruct a pretend robot (teacher) to make a jam sandwich. One of the steps towards writing a good algorithm, that can be converted into code, is precision. Precision doesn’t come naturally to most humans. Another computational thinking skill is evaluation in this case is my algorithm fit for purpose. The robot teacher interpretation of their algorithm helps pupils to evaluate its effectiveness and make changes if needed. Is it an algorithm or is it coding though, who cares its lots of fun!
Lesson	Coding	Algorithms	NA	NA	Obstacle course robot	https://playgroundcomputing.files.wordpress.com/2014/10/obstacle-course-diagram1.pdf	Using algorithms to navigate a human "robot" through an obstacle course.
Lesson	Coding	Algorithms	NA	NA	Playground games algorithm	http://code-it.co.uk/unplugged/playgroundgames/playgroundoverview	Pupils learn how to use a flow chart by trying to work out what playground game it describes. This is a great introduction to flow charts as pupils need to use them purposefully before they can write their own. Pupils then go on to trying to work out what is wrong with the bugged version of the chart.
Lesson	Coding	Algorithms	NA	NA	Rosie's Runtime	https://www2.pltw.org/pltw-microsite/rosies-runtime#download-rosies	In Rosie's Runtime – an unplugged computer science activity from PLTW Launch – students get an introduction to computer science through an interactive game that rivals recess.
Lesson	Coding	Algorithms	NA	NA	Sorting	https://sites.google.com/site/childrenandtechnology/Home/presentation-4-sorting	We look with the kids at what sorting is, what it is for, by what criteria can one sort things, and different sorting algorithms (selection, insertion and bubble sort).
Lesson	Coding	Algorithms	NA	NA	Spelling algorithms	http://code-it.co.uk/spellingalgorithms	Short spelling algorithm activities.
Lesson	Coding	Computaional thinking	5+	45-60+	Computational thinking with monsters	https://studio.code.org/unplugged/unplug2.pdf	With nothing but paper and markers, students will learn the four steps of computational thinking. After a brief introduction, students should be split into groups where they will have to create directions for other students to draw a specific monster (from a catalog of pre-selected monsters).
Lesson	Coding	Computaional thinking	5+	55+	Computational thinking	https://code.org/curriculum/course3/1/Teacher	For this activity, no instructions are provided. Instead, students will use examples of what imaginary players have done to figure out how to play the game. This lesson gives students the opportunity to practice the four arts of computational thinking (decomposition, pattern matching, abstraction, and algorithms) in one cohesive activity.
Lesson	Coding	Conditionals	4+	45-55+	Similar but different (Advanced)	https://www.kodable.com/hour-of-code/lessons/lesson_advanced_fourth	An advanced unplugged lesson on object-oriented programming; however, the lesson could be changed to focus on conditionals by doing "red light, green light" for different conditions.
Lesson	Coding	Conditionals	4+	60+	Conditionals with cards	https://code.org/curriculum/course2/12/Teacher	We don’t always know ahead of time what things will be like when we run our computer programs. Different users have different needs, and sometimes you will want to do something based off of one user's need that you don’t want to do with someone else.
Lesson	Coding	Conditionals	5+	30-40+	The Imp computer	https://teachinglondoncomputing.org/free-workshops/programming-unplugged-programming-without-computers/	You compile simple programs that involve if statements on to a computer made of studetns roped together. Each student represents an instruction. A baton represents the flow of control. It is passed to teh first student who carries out their instruction before passing it on. When it is returned the program has been executed and the appropriate result has appeared on the screen. This makes the program execution both visible and tangible allowing a variety of concepts to be explained and discussed.
Lesson	Coding	Conditionals	NA	NA	If-Then Backyard Coding Game for Kids	http://leftbraincraftbrain.com/if-then-backyard-coding-game-for-kids/	Today we’re talking coding and I had one goal in mind. Help kids learn to code with no expensive equipment. No computer, no tablet, no apps, just their bodies and their mind. So we’re starting with one of the most basic parts of computer programming, the If Then statement and turning it into a fun and active game.  It’s an If-Then Backyard Coding Game for Kids. This post contains affiliate links.
Lesson	Coding	Conditionals	NA	NA	Robotic board game	https://playgroundcomputing.files.wordpress.com/2014/10/robot-game.pdf	A board game for reinforcing if/else statements.
Lesson	Coding	Debugging	.K+	55+	Building a foundation (persistence)	https://code.org/curriculum/course1/9/Teacher	New and unsolved problems are often pretty hard. If we want to have any chance of making something creative, useful, and clever, then we need to be willing to attack hard problems. This lesson teaches that failure is not the end of a journey, but a hint for how to succeed.
Lesson	Coding	Debugging	3+	55+	Relay programming	https://code.org/curriculum/course2/9/Teacher	This activity will begin with a short review of Graph Paper Programming, then will quickly move to a race against the clock, as students break into teams and work together to create a program, one instruction at a time.
Lesson	Coding	Debugging	NA	NA	Bugs and debugging	https://www.intel.com/content/dam/www/program/education/us/en/documents/the-journery-inside/microprocessor/tji-microprocessors-handout4.pdf	Intel handout with suggestions and activites.
Lesson	Coding	Error detection	4+	NA	Card flip magic	http://csunplugged.org/error-detection/	The world is noisy place, and errors can occur whenever information is stored or transmitted. Error detection techniques add extra parity bits to data to determine when errors have occurred. This activity is a magic trick which most audiences find intriguing. In the trick the demonstrator is “magically” able to figure which one out of dozens of cards has been turned over, using the same methods that computers use to figure out if an error has occurred in data storage.
Lesson	Coding	Events	.K+	45+	The big event	https://code.org/curriculum/course1/15/Teacher	Events are a great way to add variety to a pre-written algorithm. Sometimes you want your program to be able to respond to the user exactly when the user wants it to. That is what events are for.
Lesson	Coding	Functions	2+	45-55+	fuzzFamily Fitness (Advanced)	https://www.kodable.com/hour-of-code/lessons/lesson_advanced_second	An advanced unplugged lesson that introduces functions.
Lesson	Coding	Functions	3+	50+	Functional suncatchers	https://code.org/curriculum/course3/4/Teacher	In this lesson, students will make a suncatcher out of string, beads, and a special charm. The students will follow a series of repetitive steps, then be asked to identify certain sets of “skills” that are duplicated several times. Once those skills are defined, they will be called from a main program and the whole beautiful process of creation will be recorded on a single sheet of paper.
Lesson	Coding	Functions	3+	50+	Songwriting	https://code.org/curriculum/course3/9/Teacher	One of the most magnificent structures in the computer science world is the function. Functions (sometimes called procedures) are mini programs that you can use over and over inside of your bigger program. This lesson will help students intuitively understand why combining chunks of code into functions is such a helpful practice.
Lesson	Coding	Functions	3+	55+	Songwriting with parameters	https://code.org/curriculum/course4/13/Teacher	One of the most magnificent structures in the computer science world is the function. Functions (sometimes called procedures) are mini programs that you can use over and over inside of your bigger program. This lesson will help students intuitively understand why combining chunks of code into functions is such a helpful practice.
Lesson	Coding	Image representation	2+	NA	Colour by numbers	http://csunplugged.org/image-representation/	This activity explores how images are displayed, based on the pixel as a building block. In particular, the great quantity of data in an image means that we need to use compression to be able to store and transmit it efficiently. The compression method used in this activity is based on the one used in fax machines, for black and white images.
Lesson	Coding	Information theory	5+	NA	Twenty guesses	http://csunplugged.org/information-theory/	Computers are all about storing and moving information, but what actually is information? How do we measure the amount of information in a message? This activity uses some intriguing variations on the game of 20 questions to demonstrate how we can quantify information content, which in turn shows us how to store and share it efficiently.
Lesson	Coding	Loop	1+	45-55+	Fuzz Dance Party (Advanced)	https://www.kodable.com/hour-of-code/lessons/lesson_advanced_first	An advanced unplugged lesson on using loops to create a dance.
Lesson	Coding	Loops	.K+	50+	Getting loopy	https://code.org/curriculum/course1/12/Teacher	Loops are a handy way of describing actions that repeat a certain numbers of times. In this lesson, students will practice converting sets of actions into a single loop.
Lesson	Coding	Loops	4+	55+	For loop fun	https://code.org/curriculum/course4/8/Teacher	We know that loops allow us to do things over and over again, but now we’re going to learn how to use loops with extra structure built right in.
Lesson	Coding	Object-oriented programming	5+	45-50+	this.name (Advanced)	https://www.kodable.com/hour-of-code/lessons/lesson_advanced_fifth	An advanced unplugged lesson on object-oriented programming properties.
Lesson	Coding	Program development	5+	60+	The chocolate factory	http://csunplugged.org/human-interface-design/	You don’t need to go far to find a frustrated computer user. Often it will be because they find the interface difficult to use. Designing good interfaces has become an important industry, and successful products often depend on having excellent interfaces. This activity explores just how hard it is to get things right.
Lesson	Coding	Program development	NA	Several classes	Making movie storyboards	http://www.thirteen.org/edonline/lessons/storyboarding/b.html#close	An example lesson on making movie storyboards. This lesson would need to be adapted for coding purposes. 
Lesson	Coding	Text compression	4+	NA	You can say that again	http://csunplugged.org/text-compression/	Many computer users are familiar with compressed formats such as zip, gzip, or gif images. These are based on a method called Ziv-Lempel coding, which turns out to be an interesting exercise in finding patterns in text. Children’s rhymes and stories are good examples for text compression, because they often involve repeated words and sequences.
Lesson	Coding	Variables	3+	20-50+	Variable dry run (for Scratch)	https://teachinglondoncomputing.org/free-workshops/programming-unplugged-programming-without-computers/	Set a series of dry run exercises where students have to step through short fragmetns of code working out what they do on paper. This is an important activity to do after explaining variables and assignment. It reinforces understanding and helps identify faulty mental models so they can be fixed. Being able to do this kind of dry run for any new construct is an important prerequisite to being able to actually write code. 
Lesson	Coding	Variables	3+	45-55+	Violet's Variables (Advanced)	https://www.kodable.com/hour-of-code/lessons/lesson_advanced_third	An advanced unplugged lesson that introduces variables.
Lesson	Coding	Variables	5+	15-20+	Box variables	https://teachinglondoncomputing.org/free-workshops/programming-unplugged-programming-without-computers/	You  dry run simple programs that involve variables and assignment by running them on a computer made of students. Students with boxes act as variables as values are copied between them following the instructions of the program. You physically demonstrate the creation of variables, how accessing a variable involves taking a copy of its value, and how storing values in a variable destroys any previous value stored. 
Lesson	Coding	Variables	5+	50+	Variables in envelopes	https://code.org/curriculum/course4/4/Teacher	Variables allow for a lot of freedom in computer science. This lesson helps to explain what variables are and how we can use them in many different ways. Use this activity before (or in conjunction with) the lesson on abstraction to really hit the idea home.
Lesson	Computer science	Binary	2+	NA	Count the dots	http://csunplugged.org/binary-numbers/	The binary number system plays a central role in how information of all kinds is stored on computers. Understanding binary can lift a lot of the mystery from computers, because at a fundamental level they’re really just machines for flipping binary digits on and off. There are several activities on binary numbers in this document, all simple enough that they can be used to teach the binary system to anyone who can count! Generally children learn the binary system very quickly using this approach, but we find that many adults are also excited when they finally understand what bits and bytes really are.
Lesson	Computer science	Binary	3+	45+	Binary bracelets	https://code.org/curriculum/course2/14/Teacher	Binary is extremely important to the computer world. The majority of computers today store all sorts of information in binary form. This lesson helps to demonstrate how it is possible to take something that we know and translate it into a series of ons and offs.
Lesson	Computer science	Binary	3+	50+	Binary images	https://code.org/curriculum/course4/17/Teacher	Though many people think of binary as strictly zeros and ones, our previous courses taught students that information can be represented in a variety of binary options. This lesson takes that concept one step further as it illustrates how a computer can store even more complex information (such as images and colors) in binary, as well.
Lesson	Computer science	Binary	NA	NA	Binary counter	https://www.intel.com/content/dam/www/program/education/us/en/documents/the-journery-inside/digital/tji-digital-info-handout3.pdf	Intel handout with suggestions and activites.
Lesson	Computer science	Binary	NA	NA	Binary system	https://sites.google.com/site/childrenandtechnology/presentation-9-binary-system	An introductory unplugged lesson on binary.
Lesson	Computer science	Binary	NA	NA	Think like a computer	http://embarklabs.com/explorecsunit1free	Explore the incredible power of the human brain as we explore the 5 senses and gain an understanding of how the human brain processes data in comparison to the manner in which a computer processes data. Embark Labs students will engage in a variety of exercises and challenges to demonstrate these differences in order to build a foundational working understanding of Binary Code and the logic and sequencing of modern coding languages. Students will explore concepts of coding, decoding, and debugging.
Lesson	Computer science	Computation	.K+	NA	Concurrency and synchronization	https://sites.google.com/site/childrenandtechnology/Home/presentation-5-synchronization	This workshop has kids split into teams and work on tasks that require synchronization between them. It is a great team building and leadership exercise. Thanks to German Nudelman for the idea.
Lesson	Computer science	Computation	.K+	NA	How computers work	http://cse4k12.org/how_computers_work/index.html	The purpose of this activity is to give the students a basic sense of how computers work by having them act out a simple computer simulation. Each student takes on the role of a different part of a simplified computer and they work in groups to run a simple program. The end result of this program is to draw a picture on a simulated computer display.
Lesson	Computer science	Computation	1+	NA	Simulating an iPad	https://sites.google.com/site/childrenandtechnology/presentation-simulating-an-ipad	Understand calculator application on an ipad with kids role playing various components, such as operating system, processor, button controls.
Lesson	Computer science	Computation	4+	60-75+	Human computer game	https://www.micron.com/resource-details/14170aac-001c-4d3a-ac87-a14e3b9d0053	An activity that introduces the parts and processes of a computer.
Lesson	Computer science	Computation	4+	NA	Treasure hunt	http://csunplugged.org/finite-state-automata/	Finite state automata (FSAs) sound complicated, but the basic idea is as simple as drawing a map. This fun activity is based around a fictitious pirate story which leads to the unlikely topic of reasoning about patterns in sequences of characters
Lesson	Computer science	Computation	NA	NA	Fetch, decode, and execute	https://www.intel.com/content/dam/www/program/education/us/en/documents/the-journery-inside/microprocessor/tji-microprocessors-handout2.pdf	Intel handout with suggestions and activites.
Lesson	Computer science	Computation	NA	NA	Taking command	https://www.intel.com/content/dam/www/program/education/us/en/documents/the-journery-inside/microprocessor/tji-microprocessors-handout3.pdf	Intel handout with suggestions and activites.
Lesson	Computer science	Encryption	5+	30+	The Peruvian coin flip	http://csunplugged.org/cryptographic-protocols/	This is another activity that achieves something that doesn’t seem possible – people who don’t trust each other and can’t see each other are able to agree on the outcome of a random coin flip. This is an absorbing activity for an individual student or a whole classroom.
Lesson	Computer science	Encryption	5+	5+	Sharing secrets	http://csunplugged.org/information-hiding/	Computers are often used to store private information, and we often want to share parts of it without giving up our full privacy. This activity shows a surprising technique discovered by computer scientists that seems impossible; it allows people to share personal certain kinds of information accurately without having to give up any privacy at all.
Lesson	Computer science	Encryption	6+	30+	Kid krypto	http://csunplugged.org/public-key-encryption/	Public key encryption is an extraordinary recent development that has made internet commerce possible. It allows people to encrypt and decrpyt messages without having to share a password to unlock them. It is hard to believe that such a system could exist, yet this mode of encryption is widely used because it is  This activity works with two people, but it’s most exciting with a whole class, with everybody else trying to intercept a message sent between two students.so easy to set up. This activity is fairly demanding, and requires students to be careful in the way the encode messages. Also, the samples provided here are aimed at junior high students; some younger students may find it too difficult, and more capable or older students are likely to need more complex “maps” to make the encryption convincing, since the one provided can be solved relatively easily. Balancing the amount of tedious effort required for large maps against the insecurity of smaller maps needs to be done by the teacher, although this issue can be a discussion point for the class, since the goal is to understand the issues around encryption.
Lesson	Computer science	Hardware	.K+	NA	Simulate a computer	https://sites.google.com/site/childrenandtechnology/presentation-3-simulate-computer	Draw a computer and look at computer components. Use children to simulate mouse, IO controller and a processor on the example of Calculator program. Before simulating the whole system, let kids get a feel of each individual component.
Lesson	Computer science	Hardware	NA	45-60+	My first computer exercise	http://blog.helloruby.com/post/131553874873/for-educators-lesson-plan-for-my-first-computer	My First Computer exercise is an introduction to the amazing machine that is the computer. Few things are as exciting as computers. And now kids will get to design their very own one.
Lesson	Computer science	Internet	NA	NA	How the internet works	http://cse4k12.org/internet/how-internet-works.html	This activity is an interactive demonstration of what happens when you type a URL into a browser. In this activity the students will be guided to act out the various parts of the internet: websites, routers, name servers, ISPs and home computers.
Lesson	Computer science	Networking	2+	NA	Introducing the internet: Telephone and networks	http://mediasmarts.ca/sites/mediasmarts/files/lesson-plans/lesson_introducing_internet_telephones_networks.pdf	This lesson provides studetns with an understanding of the basic structure of electronic network communications and how Internet communications are different from telephone conversations. In a hands-on classroom activity, children create and use paper cup telephones and compare this to sending messages over a computer "web" created with photocopies of computers linked by yarn.
Lesson	Computer science	Networking	2+	NA	Tourist town	http://csunplugged.org/dominating-sets/	Like the Graph Coloring problem, the dominating set problem is one that no efficient solution has been found for, even though it is very simple to describe.
Lesson	Computer science	Networking	4+	NA	Tablets of stone	http://csunplugged.org/network-protocols/	Computers talk to each other over the internet via messages. However, the internet is not reliable and sometimes these messages get lost. There are certain bits of information we can add to messages to make sure they are sent. This information makes up a protocol.
Lesson	Computer science	Networking	4+	NA	The muddy city	http://csunplugged.org/minimal-spanning-trees/	Networks are everywhere in modern society: roads, wires, water and gas pipes all connect one place to another. Computers are built of networks at many levels, from the microscopic connections between transistors in a chip to the cables and satellites that link the internet around the world. People who build networks often need to work out the most efficient way to make connections, which can be a difficult problem. This puzzle shows students the decisions involved in linking a network between houses in a muddy city. It can lead on to a discussion of minimal spanning tree algorithms for optimizing networks.
Lesson	Computer science	Networking	4+	NA	The orange game	http://csunplugged.org/routing-and-deadlock/	Computer networks are based on passing messages from computer to computer. This sounds simple in principle, but in practice all sorts of contention and bottlenecks can occur. This activity gives some first hand experience of such issues, with a game for a group of students.
Lesson	Computer science	Networking	5+	20+	Ice roads	http://csunplugged.org/steiner-trees/	The Minimal Spanning Trees activity explored techniques for finding efficient networks between points. Steiner trees are another way to approach the same problem, and they can be used to find even more efficient networks.
Lesson	Computer science	Networking	NA	NA	Did you get the message	https://www.intel.com/content/dam/www/program/education/us/en/documents/the-journery-inside/internet/tji-internet-handout2.pdf	Intel handout with suggestions and activites.
Lesson	Computer science	Networking	NA	NA	Message routing	https://sites.google.com/site/childrenandtechnology/presentation-12-message-routing	Internet works this way - computer networks are connected with each other via routers. Have kids sit at several tables, every child being a server. Have representatives for each tables to act as routers. Kids write messages to each other and routers help routing this messages
Lesson	Computer science	Networking	NA	NA	Put it in your packet	https://www.intel.com/content/dam/www/program/education/us/en/documents/the-journery-inside/internet/tji-internet-handout3.pdf	Intel handout with suggestions and activites.
Lesson	Digital citizenship	Crowdsourcing	3+	45+	Crowdsourcing	https://code.org/curriculum/course3/19/Teacher	In computer science, we face some big, daunting problems. Challenges like finding large prime numbers or sequencing DNA are almost impossible to do alone. Adding the power of others makes these tasks manageable. This lesson will show your students how helpful teamwork can really be.
Lesson	Digital citizenship	Internet	3+	55+	Internet	https://code.org/curriculum/course3/18/Teacher	In this lesson, students will pretend to flow through the Internet, all the while learning about Internet connections, URLs, IP Addresses, and the DNS.
Lesson	Digital citizenship	Safety	.K+	65+	Going places online	https://code.org/curriculum/course1/17/Teacher	In collaboration with Common Sense Media This lesson helps students learn that many websites ask for information that is private and discusses how to responsibly handle such requests.
Lesson	Digital citizenship	Safety	.K+	65+	Your digital footprint	https://code.org/curriculum/course2/18/Teacher	In collaboration with Common Sense Media, this lesson helps students learn about the similarities of staying safe in the real world and when visiting websites. Students will also learn that the information they put online leaves a digital footprint or “trail.”
Lesson	Digital citizenship	Safety	3+	60+	Digital citizenship	https://code.org/curriculum/course3/20/Teacher	In collaboration with Common Sense Media, this lesson helps students learn to think critically about the user information that some websites request or require. Students learn the difference between private information and personal information, distinguishing what is safe and unsafe to share online.
Lessons	Coding	Algorithms, debugging, conditionals	.K+	Varies	Getting started with code 1	https://itunes.apple.com/us/book/get-started-with-code-1/id1226776727?mt=11	In this interactive book developed by Apple, there are several unplugged lessons related to algorithms, debugging, and conditionals. 
Lessons	Coding	Algorithms, debugging, conditionals	3+	Varies	Getting started with code 2	https://itunes.apple.com/us/book/get-started-with-code-2/id1226776857?mt=11	In this interactive book developed by Apple, there are several unplugged lessons related to algorithms, debugging, and conditionals. 
Lessons	Coding	Mathematics	4+	NA	UCL ScratchMaths Curriculum	https://www.ucl.ac.uk/ioe/research/projects/scratchmaths/curriculum-materials	ScratchMaths is a two-year computing and mathematics-based curriculum for grades four and five. Its aim is to enable pupils to engage with and explore important mathematical ideas through learning to program. These resources focus on learning mathematics through Scratch.
Resource	Computer science	Computing systems, data and analysis, networks and the internet, and impacts of computing	K-5	NA	K-5 CS: NOT Just Coding	https://sites.google.com/view/k5csnotjustcoding/home?authuser=0	"The purpose of the K-5 CS is NOT Just Coding: Teaching Non-Algorithms & Programming Standards Workshop and this companion website is to help K-5 teachers of CS:

~Understand that Computer Science is more than just coding and why it is important to teach standards beyond Algorithms and Programming
~Understand what students need to know and be able to do to meet each standard
~Explore activities, websites, lessons to understand how the non-Algorithms and Programming standards might be taught
~Understand ways in which the Impacts of Computing Standards can be integrated into the other concept areas of CS and other curricular areas"
Resource	Coding	Algorithms	NA	NA	How do computer games work?	http://www.bbc.co.uk/guides/zchc4wx	A short video on how computer gams work (access may be geographic region).
Resource	Coding	Algorithms	NA	NA	How do you program a robot?	http://www.bbc.co.uk/guides/zqnc4wx	A short video on programming robots (access may be geographic region).
Resource	Coding	Algorithms	NA	NA	How to explain algorithms to kids	https://www.tynker.com/blog/articles/ideas-and-tips/how-to-explain-algorithms-to-kids/	A short article on how to explain algorithms to kids.
Resource	Coding	Algorithms	NA	NA	What is an algorithm?	http://www.bbc.co.uk/guides/z3whpv4	A short video on algorithms (access may be geographic region).
Resource	Coding	Algorithms	NA	NA	What is coding?	http://www.bbc.co.uk/guides/zykx6sg	A short video explaining coding (access may be geographic region).
Resource	Coding	Debugging	NA	NA	What are computer bugs?	http://www.bbc.co.uk/guides/ztgjq6f	A short video on computer bugs (access may be geographic region).
Resource	Coding	Demonstration	NA	NA	Computer Science Class Clips	http://www.bbc.co.uk/education/topics/z3tbwmn/resources/1	Short videos demonstrating computer science classes.
